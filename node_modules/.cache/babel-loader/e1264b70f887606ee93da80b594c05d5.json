{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/UdemyPlaywright/PlaywrightTS/src/ContactList.react.js\";\nimport _ from 'underscore';\nimport React from 'react';\nimport { ContactItem } from './ContactItem.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: null\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        query: event.currentTarget.value.trim()\n      });\n    };\n  }\n\n  render() {\n    const {\n      query\n    } = this.state;\n    let lowerCaseQuery;\n\n    if (query != null) {\n      lowerCaseQuery = query.toLowerCase();\n    }\n\n    const items = this.props.items.filter(item => {\n      return !lowerCaseQuery || item.name.toLowerCase().includes(lowerCaseQuery) || item.gender.toLowerCase().includes(lowerCaseQuery) || item.phone.toLowerCase().includes(lowerCaseQuery) || item.street.toLowerCase().includes(lowerCaseQuery) || item.city.toLowerCase().includes(lowerCaseQuery);\n    });\n\n    const sortedItems = _.sortBy(items, item => {\n      return item.name;\n    });\n\n    const renderedItems = sortedItems.map((item, i) => /*#__PURE__*/_jsxDEV(ContactItem, {\n      item: item,\n      onEditClick: this.props.onEditClick,\n      onDeleteClick: this.props.onDeleteClick\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this));\n    const body = renderedItems.length > 0 ? renderedItems : /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-id\": \"no-items-message\",\n      children: \"There are no items to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ContactListSearch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.onSearchChange,\n          \"data-id\": \"search\",\n          placeholder: \"Search Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ContactListAdd\",\n          \"data-id\": \"add-button\",\n          onClick: this.props.onAddClick,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, \"search\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ContactListItems\",\n        children: body\n      }, \"items\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Desktop/UdemyPlaywright/PlaywrightTS/src/ContactList.react.js"],"names":["_","React","ContactItem","ContactList","Component","state","query","onSearchChange","event","setState","currentTarget","value","trim","render","lowerCaseQuery","toLowerCase","items","props","filter","item","name","includes","gender","phone","street","city","sortedItems","sortBy","renderedItems","map","i","onEditClick","onDeleteClick","id","body","length","onAddClick"],"mappings":";AAAA,OAAOA,CAAP,MAAc,YAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR,QAA0B,qBAA1B;;AAEA,OAAO,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACNC,MAAAA,KAAK,EAAE;AADD,KADuC;;AAAA,SAyD/CC,cAzD+C,GAyD9BC,KAAK,IAAI;AACxB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAEE,KAAK,CAACE,aAAN,CAAoBC,KAApB,CAA0BC,IAA1B;AADK,OAAd;AAGD,KA7D8C;AAAA;;AAK/CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACP,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,QAAIS,cAAJ;;AACA,QAAIR,KAAK,IAAI,IAAb,EAAmB;AACjBQ,MAAAA,cAAc,GAAGR,KAAK,CAACS,WAAN,EAAjB;AACD;;AACD,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBE,MAAjB,CAAwBC,IAAI,IAAI;AAC5C,aACE,CAACL,cAAD,IACCK,IAAI,CAACC,IAAL,CAAUL,WAAV,GAAwBM,QAAxB,CAAiCP,cAAjC,KACCK,IAAI,CAACG,MAAL,CAAYP,WAAZ,GAA0BM,QAA1B,CAAmCP,cAAnC,CADD,IAECK,IAAI,CAACI,KAAL,CAAWR,WAAX,GAAyBM,QAAzB,CAAkCP,cAAlC,CAFD,IAGCK,IAAI,CAACK,MAAL,CAAYT,WAAZ,GAA0BM,QAA1B,CAAmCP,cAAnC,CAHD,IAICK,IAAI,CAACM,IAAL,CAAUV,WAAV,GAAwBM,QAAxB,CAAiCP,cAAjC,CANJ;AAQD,KATa,CAAd;;AAWA,UAAMY,WAAW,GAAG1B,CAAC,CAAC2B,MAAF,CAASX,KAAT,EAAgBG,IAAI,IAAI;AAC1C,aAAOA,IAAI,CAACC,IAAZ;AACD,KAFmB,CAApB;;AAIA,UAAMQ,aAAa,GAAGF,WAAW,CAACG,GAAZ,CAAgB,CAACV,IAAD,EAAOW,CAAP,kBACpC,QAAC,WAAD;AAEE,MAAA,IAAI,EAAEX,IAFR;AAGE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWc,WAH1B;AAIE,MAAA,aAAa,EAAE,KAAKd,KAAL,CAAWe;AAJ5B,OACOb,IAAI,CAACc,EADZ;AAAA;AAAA;AAAA;AAAA,YADoB,CAAtB;AASA,UAAMC,IAAI,GACRN,aAAa,CAACO,MAAd,GAAuB,CAAvB,GACEP,aADF,gBAGE;AAAG,iBAAQ,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAOA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAO,UAAA,QAAQ,EAAE,KAAKrB,cAAtB;AAAsC,qBAAQ,QAA9C;AAAuD,UAAA,WAAW,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,qBAAQ,YAA3C;AAAwD,UAAA,OAAO,EAAE,KAAKU,KAAL,CAAWmB,UAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAuC,QAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACGF;AADH,SAAsC,OAAtC;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAvD8C","sourcesContent":["import _ from 'underscore';\nimport React from 'react';\n\nimport {ContactItem} from './ContactItem.react';\n\nexport class ContactList extends React.Component {\n  state = {\n    query: null,\n  };\n\n  render() {\n    const {query} = this.state;\n    let lowerCaseQuery;\n    if (query != null) {\n      lowerCaseQuery = query.toLowerCase();\n    }\n    const items = this.props.items.filter(item => {\n      return (\n        !lowerCaseQuery ||\n        (item.name.toLowerCase().includes(lowerCaseQuery) ||\n          item.gender.toLowerCase().includes(lowerCaseQuery) ||\n          item.phone.toLowerCase().includes(lowerCaseQuery) ||\n          item.street.toLowerCase().includes(lowerCaseQuery) ||\n          item.city.toLowerCase().includes(lowerCaseQuery))\n      );\n    });\n\n    const sortedItems = _.sortBy(items, item => {\n      return item.name;\n    });\n\n    const renderedItems = sortedItems.map((item, i) => (\n      <ContactItem\n        key={item.id}\n        item={item}\n        onEditClick={this.props.onEditClick}\n        onDeleteClick={this.props.onDeleteClick}\n      />\n    ));\n\n    const body =\n      renderedItems.length > 0 ? (\n        renderedItems\n      ) : (\n        <p data-id=\"no-items-message\">There are no items to display</p>\n      );\n\n    return (\n      <div className=\"ContactList\">\n        <div className=\"ContactListSearch\" key=\"search\">\n          <input onChange={this.onSearchChange} data-id=\"search\" placeholder=\"Search Contacts\" />\n          <button className=\"ContactListAdd\" data-id=\"add-button\" onClick={this.props.onAddClick}>\n            Create\n          </button>\n        </div>\n        <div className=\"ContactListItems\" key=\"items\">\n          {body}\n        </div>\n      </div>\n    );\n  }\n\n  onSearchChange = event => {\n    this.setState({\n      query: event.currentTarget.value.trim(),\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}